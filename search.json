[{"path":"https://dliao1.github.io/kperm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daisy Liao Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://dliao1.github.io/kperm/articles/my-vignette.html","id":"simulating","dir":"Articles","previous_headings":"Univariate","what":"Simulating","title":"my-vignette","text":"","code":"sim_data <- sim_pp_data(lambda_n = 200,                      abundance = 0.3,                     cell_type1 = \"immune\",                     cell_type2 = \"background\",                     distribution = \"hom\",                     clust = FALSE) marksvar = \"immune\" rvalues = seq(0, 1, length.out = 50)  #w = convexhull.xy(ovarian[[\"x\"]], ovarian[[\"y\"]])  # define pp_obj # pp_obj = ppp(ovarian[[\"x\"]], ovarian[[\"y\"]], window = w, marks = ovarian[[marksvar]])  pp_obj <- sim_data  df_back <- as.data.frame(pp_obj) %>%   as_tibble()  df_back #> # A tibble: 199 × 3 #>         x      y marks      #>     <dbl>  <dbl> <fct>      #>  1 0.435  0.779  background #>  2 0.324  0.230  background #>  3 0.861  0.902  background #>  4 0.0842 0.752  background #>  5 0.930  0.410  background #>  6 0.200  0.725  immune     #>  7 0.625  0.814  background #>  8 0.275  0.0477 background #>  9 0.180  0.0191 background #> 10 0.194  0.0192 immune     #> # ℹ 189 more rows   as_tibble(pp_obj) %>%     ggplot(aes(x,y, color = marks)) +     geom_point()"},{"path":"https://dliao1.github.io/kperm/articles/my-vignette.html","id":"expectation","dir":"Articles","previous_headings":"Univariate","what":"Expectation","title":"my-vignette","text":"","code":"kamp_expec = kamp_expectation(ppp_obj = pp_obj,                             rvec = rvalues,                             markvar = marksvar,                             thin_pct = 0.75) %>%    mutate(og_fundiff = k - theo_csr,          method = \"kamp\") %>%   drop_na()  kamp_expec #> # A tibble: 35 × 7 #>         r       k theo_csr kamp_csr kamp_fundiff og_fundiff method #>     <dbl>   <dbl>    <dbl>    <dbl>        <dbl>      <dbl> <chr>  #>  1 0      0        0        0            0          0       kamp   #>  2 0.0204 0        0.00131  0.00188     -0.00188   -0.00131 kamp   #>  3 0.0408 0        0.00523  0.00575     -0.00575   -0.00523 kamp   #>  4 0.0612 0.00630  0.0118   0.0107      -0.00440   -0.00547 kamp   #>  5 0.0816 0.00630  0.0209   0.0178      -0.0115    -0.0146  kamp   #>  6 0.102  0.00630  0.0327   0.0271      -0.0208    -0.0264  kamp   #>  7 0.122  0.0133   0.0471   0.0347      -0.0214    -0.0338  kamp   #>  8 0.143  0.0272   0.0641   0.0545      -0.0273    -0.0369  kamp   #>  9 0.163  0.0490   0.0837   0.0761      -0.0271    -0.0348  kamp   #> 10 0.184  0.0934   0.106    0.0961      -0.00267   -0.0126  kamp   #> # ℹ 25 more rows   kamp_expec_mat = kamp_expectation_mat(ppp_obj = pp_obj,                                     rvec = rvalues,                                     markvar = marksvar) %>%    drop_na()  kamp_expec_mat #> # A tibble: 50 × 5 #>         r       k theo_csr kamp_csr kamp_fundiff #>     <dbl>   <dbl>    <dbl>    <dbl>        <dbl> #>  1 0      0        0        0          0         #>  2 0.0204 0.00152  0.00131  0.00171   -0.000191  #>  3 0.0408 0.00563  0.00523  0.00524    0.000391  #>  4 0.0612 0.00989  0.0118   0.0107    -0.000843  #>  5 0.0816 0.0192   0.0209   0.0191     0.0000123 #>  6 0.102  0.0320   0.0327   0.0313     0.000739  #>  7 0.122  0.0464   0.0471   0.0462     0.000197  #>  8 0.143  0.0630   0.0641   0.0626     0.000476  #>  9 0.163  0.0832   0.0837   0.0811     0.00216   #> 10 0.184  0.110    0.106    0.103      0.00625   #> # ℹ 40 more rows"},{"path":"https://dliao1.github.io/kperm/articles/my-vignette.html","id":"variance","dir":"Articles","previous_headings":"Univariate","what":"Variance","title":"my-vignette","text":"","code":"kamp_var = kamp_variance(ppp_obj = pp_obj,                          rvec = rvalues,                          markvar = marksvar) %>%    drop_na()  kamp_var #> # A tibble: 49 × 7 #>         r       k theo_csr kamp_csr         var        z pvalue #>     <dbl>   <dbl>    <dbl>    <dbl>       <dbl>    <dbl>  <dbl> #>  1 0.0204 0.00152  0.00131  0.00171 0.000000744 -0.221    0.588 #>  2 0.0408 0.00563  0.00523  0.00524 0.00000229   0.258    0.398 #>  3 0.0612 0.00989  0.0118   0.0107  0.00000435  -0.404    0.657 #>  4 0.0816 0.0192   0.0209   0.0191  0.00000804   0.00432  0.498 #>  5 0.102  0.0320   0.0327   0.0313  0.0000152    0.189    0.425 #>  6 0.122  0.0464   0.0471   0.0462  0.0000230    0.0411   0.484 #>  7 0.143  0.0630   0.0641   0.0626  0.0000358    0.0795   0.468 #>  8 0.163  0.0832   0.0837   0.0811  0.0000513    0.302    0.381 #>  9 0.184  0.110    0.106    0.103   0.0000709    0.742    0.229 #> 10 0.204  0.135    0.131    0.129   0.000101     0.577    0.282 #> # ℹ 39 more rows"},{"path":[]},{"path":"https://dliao1.github.io/kperm/articles/my-vignette.html","id":"simulating-1","dir":"Articles","previous_headings":"Bivariate","what":"Simulating","title":"my-vignette","text":"move helpers utils file need timing stuff think abt user facing stuff 10000 cells use border correction thinning percentage = 0 whole separate function bivariate unit tests small spatstat generated datasets https://github.com/julia-wrobel/registr/blob/master/R/register_fpca.R (documentation example) SIMULATION SETUP: can compare traditional K (trans border correction), Kinhom, Kperm (100 permutations), KAMP images : random, clustered, inhomogenous (generate show images) 4 nulls total: 2 null: CLUSTERING CLUSTERING within , homogenous inhomogenous background Varied rate total cells (n) immune cell abundance (p) n ∈(100, 500, 1000) # maybe tweak bc decreased p ∈(0.1, 0.3, 0.5) 3*3 = 9 images subset null hypothesis 9x4 = 36 total, assuming im avging barplots stuff? Compare: accuracy (bar plots fundiff centered 0) computation time can also compare power type error # yah idk can compare ? fundiff > 0 thats clustering? getting variance perm KAMP dist comparing CIs?? need look code building site https://pkgdown.r-lib.org/ pkgdown::build_site() devtools::document() devtools::install() devtools::build_vignettes()","code":"sim_data_biv <- sim_pp_data_bivariate(lambda_n = 200,                      abundance = 0.3,                     cell_type1 = \"immune1\",                     cell_type2 = \"immune2\",                     cell_type3 = \"background\",                     distribution = \"inhom\",                     clust = TRUE) #> Computing probability for Cell 1 #> Computing probability for Cell 2 #> Computing hole probability   marksvar = \"immune\" rvalues = seq(0, 1, length.out = 50)  pp_obj <- sim_data_biv  df_back <- as.data.frame(pp_obj) %>%   as_tibble()  df_back #> # A tibble: 193 × 3 #>        x     y marks      #>    <dbl> <dbl> <fct>      #>  1 7.66   5.22 immune1    #>  2 1.88   3.71 immune2    #>  3 8.79   5.26 background #>  4 2.25   3.42 immune2    #>  5 7.95   4.50 immune2    #>  6 2.59   3.83 immune2    #>  7 6.50   6.51 background #>  8 6.66   4.91 background #>  9 0.418  6.77 background #> 10 6.97   7.09 background #> # ℹ 183 more rows   as_tibble(pp_obj) %>%     ggplot(aes(x,y, color = marks)) +     geom_point()"},{"path":"https://dliao1.github.io/kperm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daisy Liao. Author, maintainer.","code":""},{"path":"https://dliao1.github.io/kperm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao D (2025). kperm: KAMP: Permutation-Based Ripley's K Analysis Spatial Point Patterns. R package version 0.0.0.9000, https://dliao1.github.io/kperm/.","code":"@Manual{,   title = {kperm: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns},   author = {Daisy Liao},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dliao1.github.io/kperm/}, }"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_expectation — kamp_expectation","title":"kamp_expectation — kamp_expectation","text":"Computes KAMP (K-function Adjusted Marked Permutations) expectation given spatial point pattern. function calculates Ripley's K using traditional Ripley's K method (based Kcross) KAMP-adjusted CSR baseline (based Kest). KAMP-adjusted CSR represents realistic baseline K (compared traditional CSR) accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. See ?Kcross ?Kest details K calculation methods. See get_kamp_expectation_mat matrix-based implementation.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_expectation — kamp_expectation","text":"","code":"kamp_expectation(   ppp_obj,   rvec = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   markvar = \"immune\",   thin_pct = 0 )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_expectation — kamp_expectation","text":"ppp_obj point pattern object spatstat.geom package. rvec Vector radii calculate KAMP expectation. Defaults c(0, 0.05, 0.075, 0.1, 0.15, 0.2). correction Specifies edge correction method used passed Kcross Kest. markvar Identifies subset marked points, defaults immune thin_pct Percentage determines much thin amount points point pattern object.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_expectation — kamp_expectation","text":"dataframe following columns: r radius K calculated. k observed K value Kcross theo_csr theoretical K CSR Kcross kamp_csr adjusted CSR representing permuted expectation. kamp_fundiff difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_expectation — kamp_expectation","text":"Compute KAMP Expectation","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kamp_expectation — kamp_expectation","text":"","code":"if (requireNamespace(\"spatstat.geom\", quietly = TRUE)) {   # simulates a simple spatial point pattern with two types   win <- spatstat.geom::owin(c(0, 1), c(0, 1))   pp <- spatstat.random::rpoispp(lambda = 100, win = win)   marks <- sample(c(\"immune\", \"background\"), pp$n, replace = TRUE)   marked_pp <- spatstat.geom::ppp(pp$x, pp$y, window = win, marks = factor(marks))    # computes KAMP expectation   kamp_result <- kamp_expectation(marked_pp, markvar = \"immune\")   print(kamp_result) } #> # A tibble: 6 × 5 #>       r       k theo_csr kamp_csr kamp_fundiff #>   <dbl>   <dbl>    <dbl>    <dbl>        <dbl> #> 1 0     0        0        0            0       #> 2 0.05  0.00970  0.00785  0.00586      0.00384 #> 3 0.075 0.0211   0.0177   0.0144       0.00669 #> 4 0.1   0.0328   0.0314   0.0267       0.00614 #> 5 0.15  0.0809   0.0707   0.0705       0.0103  #> 6 0.2   0.137    0.126    0.128        0.00906"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_expectation_mat — kamp_expectation_mat","title":"kamp_expectation_mat — kamp_expectation_mat","text":"Computes KAMP (K-function Adjusted Marked Permutations) expectation given spatial point pattern. function calculates Ripley's K using traditional Ripley's K method (based Kcross) KAMP-adjusted CSR baseline (based Kest). KAMP-adjusted CSR represents realistic baseline K (compared traditional CSR) accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. Note: slower, matrix-based implementation KAMP expectation See get_kamp_expectation faster implementation utilizes functions spatstat","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_expectation_mat — kamp_expectation_mat","text":"","code":"kamp_expectation_mat(   ppp_obj,   rvec = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   markvar = \"immune\",   thin_pct = 0 )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_expectation_mat — kamp_expectation_mat","text":"ppp_obj point pattern object class \"ppp\" spatstat package. rvec vector radii calculate KAMP expectation. correction Type border correction (can either translational border) markvar variable used mark points point pattern object. Default \"immune\". thin_pct Percentage determines much thin amount points point pattern object.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_expectation_mat — kamp_expectation_mat","text":"dataframe following columns: r radius K calculated. k observed K value calculated using matrices theo_csr theoretical K CSR kamp_csr adjusted CSR representing permuted expectation. kamp_fundiff difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_expectation_mat — kamp_expectation_mat","text":"Computes KAMP Expectation using matrices","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kamp_expectation_mat — kamp_expectation_mat","text":"","code":"if (requireNamespace(\"spatstat.geom\", quietly = TRUE)) { # simulate a simple spatial point pattern with two types win <- spatstat.geom::owin(c(0, 1), c(0, 1)) pp <- spatstat.random::rpoispp(lambda = 100, win = win) marks <- sample(c(\"immune\", \"background\"), pp$n, replace = TRUE) marked_pp <- spatstat.geom::ppp(pp$x, pp$y, window = win, marks = factor(marks)) # compute KAMP expectation using matrix method kamp_result_mat <- kamp_expectation_mat(marked_pp, markvar = \"immune\") print(kamp_result_mat) } #> # A tibble: 6 × 5 #>       r       k theo_csr kamp_csr kamp_fundiff #>   <dbl>   <dbl>    <dbl>    <dbl>        <dbl> #> 1 0     0        0        0           0        #> 2 0.05  0.00709  0.00785  0.00784    -0.000754 #> 3 0.075 0.0169   0.0177   0.0162      0.000690 #> 4 0.1   0.0262   0.0314   0.0280     -0.00176  #> 5 0.15  0.0674   0.0707   0.0670      0.000393 #> 6 0.2   0.115    0.126    0.118      -0.00218"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","title":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","text":"Helper function calculate KAMP expectation given point pattern object radius.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","text":"","code":"kamp_expectation_mat_helper(   ppp_obj,   rvalue,   correction = \"trans\",   markvar = \"immune\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","text":"ppp_obj point pattern object \"ppp\" spatstat package. rvalue single radius markvar variable used mark points point pattern object - default \"immune\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","text":"dataframe following columns: r radius K calculated. k observed K value Kcross theo_csr theoretical K CSR Kcross kamp_csr adjusted CSR representing permuted expectation. kamp_fundiff difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_mat_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_expectation_mat_helper — kamp_expectation_mat_helper","text":"KAMP Expectation Helper","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_variance — kamp_variance","title":"kamp_variance — kamp_variance","text":"Computes KAMP (K-function Adjusted Marked Permutations) variance given spatial point pattern. Also returns KAMP expectation, z-statistic, p-value. Note: matrix-based implementation KAMP variance use spatstat package.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_variance — kamp_variance","text":"","code":"kamp_variance(   ppp_obj,   rvec = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   markvar = \"immune\",   thin_pct = 0 )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_variance — kamp_variance","text":"ppp_obj point pattern object class \"ppp\" spatstat package. rvec vector radii calculate KAMP variance. correction Type border correction (can either translational border) markvar variable used mark points point pattern object. Default \"immune\". thin_pct Percentage determines much thin amount points point pattern object.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_variance — kamp_variance","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp_fundiff difference observed K KAMP CSR var Variance K permutation null distribution z Z statistic, calculated normalizing K using formula: (K - KAMP)/sqrt(var) pval P-value, calculated using formula: pnorm(-z)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_variance — kamp_variance","text":"KAMP Variance","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kamp_variance — kamp_variance","text":"","code":"if (requireNamespace(\"spatstat.geom\", quietly = TRUE)) {   # simulates a simple spatial point pattern with two types   win <- spatstat.geom::owin(c(0, 1), c(0, 1))   pp <- spatstat.random::rpoispp(lambda = 100, win = win)   marks <- sample(c(\"immune\", \"background\"), pp$n, replace = TRUE)   marked_pp <- spatstat.geom::ppp(pp$x, pp$y, window = win, marks = factor(marks))    # computes KAMP variance   kamp_result <- kamp_variance(marked_pp, markvar = \"immune\")   print(kamp_result) } #> # A tibble: 6 × 7 #>       r       k theo_csr kamp_csr        var       z  pvalue #>   <dbl>   <dbl>    <dbl>    <dbl>      <dbl>   <dbl>   <dbl> #> 1 0     0        0        0       0          NaN     NaN     #> 2 0.05  0.00909  0.00785  0.00739 0.00000412   0.838   0.201 #> 3 0.075 0.0186   0.0177   0.0166  0.00000795   0.681   0.248 #> 4 0.1   0.0277   0.0314   0.0298  0.0000150   -0.563   0.713 #> 5 0.15  0.0771   0.0707   0.0718  0.0000466    0.783   0.217 #> 6 0.2   0.136    0.126    0.128   0.000115     0.741   0.229"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_variance_helper — kamp_variance_helper","title":"kamp_variance_helper — kamp_variance_helper","text":"Helper function calculate KAMP variance point pattern object single radius.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_variance_helper — kamp_variance_helper","text":"","code":"kamp_variance_helper(ppp_obj, rvalue, correction = \"trans\", markvar = \"immune\")"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_variance_helper — kamp_variance_helper","text":"ppp_obj point pattern object \"ppp\" spatstat package. rvalue single radius correction Type border correction (can either translational border) markvar variable used mark points point pattern object (default \"immune\")","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_variance_helper — kamp_variance_helper","text":"single-row dataframe following columns: r current radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp_fundiff difference observed K KAMP CSR var Variance K permutation null distribution z Z statistic, calculated normalizing K using formula: (K - KAMP)/sqrt(var) pval P-value, calculated using formula: pnorm(-z)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_variance_helper — kamp_variance_helper","text":"KAMP Variance Helper","code":""},{"path":"https://dliao1.github.io/kperm/reference/kperm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"kperm: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — kperm-package","title":"kperm: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — kperm-package","text":"Provides functions calculate KAMP, robust scalable K-statistic inhomogenous spatial point pattern data.","code":""},{"path":[]},{"path":"https://dliao1.github.io/kperm/reference/kperm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"kperm: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — kperm-package","text":"Maintainer: Daisy Liao daisy.liao@emory.edu (ORCID)","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates spatial data — sim_pp_data","title":"Simulates spatial data — sim_pp_data","text":"Simulates spatial point pattern two cell types: background immune.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates spatial data — sim_pp_data","text":"","code":"sim_pp_data(   lambda_n,   abundance,   cell_type1 = \"immune\",   cell_type2 = \"background\",   distribution = \"hom\",   clust = FALSE )"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates spatial data — sim_pp_data","text":"lambda_n Number total cells image abundance Percentage intensity marker positive cells cell_type1 Marker positive cell type (default \"immune\") cell_type2 Marker negative cell type (default \"background\") distribution Determines whether image homogeneous (\"hom\") inhomogeneous (\"inhom\") clust Determines whether image simulated without clustering (TRUE/FALSE)","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates spatial data — sim_pp_data","text":"point pattern object class \"ppp\" spatstat package two cell types background immune.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates spatial data — sim_pp_data","text":"","code":"if (requireNamespace(\"dplyr\", quietly = TRUE) &&    requireNamespace(\"ggplot2\", quietly = TRUE) &&    requireNamespace(\"tibble\", quietly = TRUE) &&    requireNamespace(\"magrittr\", quietly = TRUE)) {   pp_obj <- sim_pp_data(lambda_n = 200, abundance = 0.3)   magrittr::`%>%`(   tibble::as_tibble(pp_obj),   ggplot2::ggplot(ggplot2::aes(x, y, color = marks))   ) +   ggplot2::geom_point() }"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates bivariate point process data — sim_pp_data_bivariate","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"Simulates spatial point pattern three cell types: background, immune1, immune2.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"","code":"sim_pp_data_bivariate(   lambda_n,   abundance,   cell_type1 = \"immune1\",   cell_type2 = \"immune2\",   cell_type3 = \"background\",   distribution = \"hom\",   clust = FALSE )"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"lambda_n Number total cells image abundance Percentage intensity marker positive cells cell_type1 Marker positive cell type (default \"immune1\") cell_type2 Marker positive cell type (default \"immune2\") cell_type3 Marker negative cell type (default \"background\") distribution Determines whether image homogeneous (\"hom\") inhomogeneous (\"inhom\") clust Determines whether image simulated without clustering (TRUE/FALSE)","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"#' @importFrom spatstat.explore Kcross Kest","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"Simulates bivariate point process data","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates bivariate point process data — sim_pp_data_bivariate","text":"","code":"if (requireNamespace(\"dplyr\", quietly = TRUE) &&    requireNamespace(\"ggplot2\", quietly = TRUE) &&    requireNamespace(\"tibble\", quietly = TRUE) &&    requireNamespace(\"magrittr\", quietly = TRUE)) {   pp_obj <- sim_pp_data_bivariate(lambda_n = 200, abundance = 0.3)   magrittr::`%>%`(   tibble::as_tibble(pp_obj),   ggplot2::ggplot(ggplot2::aes(x, y, color = marks))   ) +   ggplot2::geom_point() }"}]
