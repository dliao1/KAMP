[{"path":"https://dliao1.github.io/kperm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daisy Liao Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to KAMP","text":"Hello welcome KAMP package! package designed calculate expectation variance KAMP (K adjustment Analytical Moments Permutation distribution) point patterns marks. package partially built spatstat package, powerful tool analyzing spatial data R. KAMP package provides functions simulate point patterns, calculate KAMP CSR, visualize results. package designed user-friendly easy use, focus providing clear concise output. package still development, welcome feedback suggestions improvement. questions issues, please feel free reach us.","code":""},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to KAMP","text":"","code":"library(KAMP) #library(devtools) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.1     ✔ stringr   1.5.2 #> ✔ ggplot2   4.0.0     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(spatstat.random) #> Loading required package: spatstat.data #> Loading required package: spatstat.univar #> spatstat.univar 3.1-4 #> Loading required package: spatstat.geom #> spatstat.geom 3.6-0 #> spatstat.random 3.4-2 #devtools::load_all() set.seed(50)"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"ovarian-dataset","dir":"Articles","previous_headings":"","what":"Ovarian Dataset","title":"Introduction to KAMP","text":"ovarian_df dataset small dataframe contains snapshot 5 images ovarian cancer cells HumanOvarianCancerVP() dataset VectraPolarisData package. image represented unique sample ID, within image, multiple cells respective x y coordinates. dataset includes immune column indicates whether cell immune cell background cell. also phenotype column indicates type immune cell, “helper t cells”, “cytotoxic t cells”, “b cells”, “macrophages”. x y columns represent coordinates cells image. Since dataframe multiple images, let’s go , subset dataframe id, plot .","code":"data(ovarian_df) head(ovarian_df) #>   cell_id                                           sample_id       x       y #> 1       1 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20592.9 34524.4 #> 2       2 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20859.3 34524.4 #> 3       3 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20591.4 34530.4 #> 4       4 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20744.7 34528.9 #> 5       5 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20419.8 34540.8 #> 6       6 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20741.7 34542.3 #>       immune phenotype #> 1 background     other #> 2 background     other #> 3 background     tumor #> 4 background     tumor #> 5 background     other #> 6 background     tumor ids <- unique(ovarian_df$sample_id) mark_var <- \"immune\"  for (id in ids) {   df_sub <- ovarian_df %>% filter(sample_id == id)   w <- convexhull.xy(df_sub$x, df_sub$y)   pp_obj <- ppp(df_sub$x, df_sub$y, window = w, marks = df_sub[[mark_var]])      p <- ggplot(as_tibble(pp_obj), aes(x, y, color = marks)) +     geom_point(size = 0.6) +     labs(title = paste(\"Sample:\", id)) +     theme_minimal()      print(p) }"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"kamp","dir":"Articles","previous_headings":"","what":"KAMP","title":"Introduction to KAMP","text":"Now data, can use kamp() function calculate KAMP expectation variance univariate bivariate data.","code":""},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"univariate","dir":"Articles","previous_headings":"KAMP","what":"Univariate","title":"Introduction to KAMP","text":"can use kamp() function calculate KAMP expectation univariate data. kamp() function several parameters allow us customize calculation: ppp_obj: point pattern object created using ppp() function spatstat package. rvals: sequence distances calculate K function. univariate: logical value indicating whether calculate univariate K function (default TRUE). marks_var: name marks variable point pattern object (default \"marks\"). mark1: value marks variable first mark (required univariate). mark2: value marks variable second mark (optional univariate). variance: logical value indicating whether calculate variance (default FALSE). thin: logical value indicating whether use thinning (default FALSE). p_thin: Percentage thin (default 0.5). univariate data, need specify one marks variable. case, set univariate = TRUE variance = FALSE (default). univariate = TRUE calculates K function one mark versus background. variance = FALSE means compute expectation. correction uses translational correction default.","code":""},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"subsetting-data","dir":"Articles","previous_headings":"KAMP > Univariate","what":"Subsetting Data","title":"Introduction to KAMP","text":"perform univariate analysis, can subset ovarian_df dataframe include first image ID immune marks variable.","code":"ids <- unique(ovarian_df$sample_id) univ_data <- ovarian_df %>% filter(sample_id == ids[1]) mark_var <- \"immune\" head(univ_data) #>   cell_id                                           sample_id       x       y #> 1       1 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20592.9 34524.4 #> 2       2 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20859.3 34524.4 #> 3       3 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20591.4 34530.4 #> 4       4 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20744.7 34528.9 #> 5       5 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20419.8 34540.8 #> 6       6 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20741.7 34542.3 #>       immune phenotype #> 1 background     other #> 2 background     other #> 3 background     tumor #> 4 background     tumor #> 5 background     other #> 6 background     tumor"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"expectation","dir":"Articles","previous_headings":"KAMP > Univariate","what":"Expectation","title":"Introduction to KAMP","text":"can now calculate KAMP expectation univariate data using kamp() function. calculating KAMP expectation immune marks variable background cells, using sequence distances 0 100 step 10. Furthermore, use option univariate = TRUE specify marks variable first mark mark1 = \"immune\" - setting mark2 since interested univariate case. ’s returned data frame following columns: r: distance K function calculated. k: K function value. theo_csr: theoretical CSR (Complete Spatial Randomness) value. kamp_csr: KAMP CSR value. kamp: difference K KAMP CSR. can visualize KAMP using ggplot2. Plotted original K translational edge correctionm, theoretical CSR, KAMP CSR. KAMP CSR expected value K null hypothesis CSR, calculated using analytical moments permutation distribution.  Looking plot, can see KAMP CSR (blue line) slightly higher theoretical CSR (black line) larger distances. result aligns expectations, , view plots first sample image, first image inhomogenous - .e. large holes/“patches” empty space make immune cells appear clustered expected CSR. Let’s plot differences k theo_csr kamp_csr get better idea:  expected, difference k theoretical CSR values tended higher difference k KAMP CSR values, indicating KAMP CSR seems better job accounting inhomogenous tissue quality.","code":"univ_kamp <- kamp(univ_data,                    rvals = seq(0, 100, by = 10),                   univariate = TRUE,                   mark_var = mark_var,                   mark1 = \"immune\") #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction  univ_kamp #> # A tibble: 11 × 5 #>        r      k theo_csr kamp_csr   kamp #>    <dbl>  <dbl>    <dbl>    <dbl>  <dbl> #>  1     0     0        0        0      0  #>  2    10  2338.     314.     521.  1817. #>  3    20  5855.    1257.    2108.  3747. #>  4    30 10460.    2827.    4527.  5933. #>  5    40 14735.    5027.    7727.  7008. #>  6    50 20228.    7854.   11713.  8515. #>  7    60 27485.   11310.   16472. 11013. #>  8    70 35859.   15394.   22039. 13820. #>  9    80 43814.   20106.   28302. 15511. #> 10    90 52296.   25447.   35277. 17019. #> 11   100 60732.   31416.   42914. 17818. univ_kamp %>%   ggplot(aes(x = r)) +   geom_line(aes(y = theo_csr, color = \"theo_csr\", linetype = \"theo_csr\"), size = 1) +   geom_line(aes(y = kamp_csr, color = \"kamp_csr\", linetype = \"kamp_csr\"), size = 1) +   geom_line(aes(y = k, color = \"k\", linetype = \"k\"), size = 1) +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") +   scale_color_manual(     values = c(       \"theo_csr\" = \"black\",       \"kamp_csr\" = \"blue\",       \"k\" = \"red\"     )   ) +   scale_linetype_manual(     values = c(       \"theo_csr\" = \"solid\",       \"kamp_csr\" = \"solid\",       \"k\" = \"dotted\"     )   ) +   labs(     title = \"Univariate KAMP Expectation\",     x = \"r\",     y = \"Value\",     color = \"Series\",     linetype = \"Series\"   ) +   theme_minimal() #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. univ_kamp %>%   ggplot(aes(x = r)) +   geom_line(aes(y = k - kamp_csr, color = \"k - kamp_csr\", linetype = \"k - kamp_csr\"), size = 1) +   geom_line(aes(y = k - theo_csr, color = \"k - theo_csr\", linetype = \"k - theo_csr\"), size = 1) +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") +   scale_color_manual(     values = c(       \"k - theo_csr\" = \"red\",       \"k - kamp_csr\" = \"blue\"     )   ) +   scale_linetype_manual(     values = c(       \"k - theo_csr\" = \"solid\",       \"k - kamp_csr\" = \"solid\"     )   ) +   labs(     title = \"Univariate KAMP Expectation - differences\",     x = \"r\",     y = \"Value\",     color = \"Series\",     linetype = \"Series\"   ) +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"variance","dir":"Articles","previous_headings":"KAMP > Univariate","what":"Variance","title":"Introduction to KAMP","text":"calculate variance KAMP expectation, still use kamp() function, set variance = TRUE. compute variance KAMP expectation distance r. new output include columns , additional column var contains variance KAMP expectation distance, p-val column contains p-value variance test. Note: variance = TRUE compatible thin = TRUE. set TRUE, warning thrown variance still calculated, results may unreliable. can visualize variance KAMP expectation using ggplot2:","code":"univ_kamp_var <- kamp(univ_data,                       rvals = seq(0, 100, by = 10),                       univariate = TRUE,                       mark_var = mark_var,                       mark1 = \"immune\",                       variance = TRUE) #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction #>  ■■■■                               9% |  ETA:  2m #>  ■■■■■■                            18% |  ETA:  1m #>  ■■■■■■■■■                         27% |  ETA:  1m #>  ■■■■■■■■■■■■                      36% |  ETA:  1m #>  ■■■■■■■■■■■■■■■                   45% |  ETA: 49s #>  ■■■■■■■■■■■■■■■■■                 55% |  ETA: 40s #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA: 32s #>  ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA: 24s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA: 16s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  8s univ_kamp_var #> # A tibble: 11 × 7 #>        r      k theo_csr kamp_csr   kamp      var     pvalue #>    <dbl>  <dbl>    <dbl>    <dbl>  <dbl>    <dbl>      <dbl> #>  1     0     0        0        0      0        0  NaN        #>  2    10  2338.     314.     523.  1816.   18683.   1.43e-40 #>  3    20  5855.    1257.    2108.  3747.   80000.   2.30e-40 #>  4    30 10460.    2827.    4527.  5933.  190355.   2.03e-42 #>  5    40 14735.    5027.    7727.  7008.  367573.   3.34e-31 #>  6    50 20228.    7854.   11713.  8515.  633052.   4.99e-27 #>  7    60 27485.   11310.   16473. 11012. 1019381.   5.33e-28 #>  8    70 35859.   15394.   22040. 13819. 1558782.   8.92e-29 #>  9    80 43814.   20106.   28302. 15511. 2275297.   4.19e-25 #> 10    90 52296.   25447.   35277. 17019. 3211674.   1.09e-21 #> 11   100 60732.   31416.   42914. 17818. 4377696.   8.26e-18 univ_kamp_var %>%   ggplot(aes(x = r, y = var)) +   geom_line() +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +   labs(title = \"Univariate KAMP Variance\", x = \"r\", y = \"Variance\") +   theme_minimal()"},{"path":[]},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"subsetting-data-1","dir":"Articles","previous_headings":"KAMP > Bivariate","what":"Subsetting Data","title":"Introduction to KAMP","text":"bivariate analysis, can subset ovarian_df dataframe include two types immune cells background cells. example, use “helper t cells” “cytotoxic t cells”.","code":"ids <- unique(ovarian_df$sample_id) biv_data <- ovarian_df %>%    filter(sample_id == ids[1]) #%>% #filter(phenotype %in% c(\"helper t cells\", \"cytotoxic t cells\", \"other\")) %>% #droplevels()  mark_var <- \"phenotype\"  head(biv_data) #>   cell_id                                           sample_id       x       y #> 1       1 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20592.9 34524.4 #> 2       2 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20859.3 34524.4 #> 3       3 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20591.4 34530.4 #> 4       4 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20744.7 34528.9 #> 5       5 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20419.8 34540.8 #> 6       6 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20741.7 34542.3 #>       immune phenotype #> 1 background     other #> 2 background     other #> 3 background     tumor #> 4 background     tumor #> 5 background     other #> 6 background     tumor"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"expectation-1","dir":"Articles","previous_headings":"KAMP > Bivariate","what":"Expectation","title":"Introduction to KAMP","text":"calculate KAMP expectation bivariate data, set univariate = FALSE specify marks variables marks.","code":"biv_kamp <- kamp(df = biv_data,                  rvals = seq(0, 100, by = 10),                  univariate = FALSE,                  mark_var = mark_var,                  mark1 = \"helper t cell\",                  mark2 = \"cytotoxic t cell\") #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction head(biv_kamp) #> # A tibble: 6 × 5 #>       r      k theo_csr kamp_csr  kamp #>   <dbl>  <dbl>    <dbl>    <dbl> <dbl> #> 1     0     0        0        0     0  #> 2    10   663.     314.     521.  142. #> 3    20  2667.    1257.    2108.  559. #> 4    30  7386.    2827.    4527. 2859. #> 5    40  8745.    5027.    7727. 1017. #> 6    50 13191.    7854.   11713. 1478. biv_kamp %>%   ggplot(aes(x = r)) +   geom_line(aes(y = theo_csr, color = \"theo_csr\", linetype = \"theo_csr\"), size = 1) +   geom_line(aes(y = kamp, color = \"kamp\", linetype = \"kamp\"), size = 1) +   geom_line(aes(y = k, color = \"k\", linetype = \"k\"), size = 1) +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") +   scale_color_manual(     values = c(       \"theo_csr\" = \"black\",       \"kamp\" = \"blue\",       \"k\" = \"red\"     )   ) +   scale_linetype_manual(     values = c(       \"theo_csr\" = \"solid\",       \"kamp\" = \"dotted\",       \"k\" = \"dotted\"     )   ) +   labs(     title = \"Bivariate KAMP Expectation\",     x = \"r\",     y = \"Value\",     color = \"Series\",     linetype = \"Series\"   ) +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"variance-1","dir":"Articles","previous_headings":"KAMP > Bivariate","what":"Variance","title":"Introduction to KAMP","text":"","code":"biv_kamp_var <- kamp(df = biv_data,                      rvals = seq(0, 100, by = 10),                      univariate = FALSE,                      mark_var = mark_var,                      mark1 = \"helper t cell\",                      mark2 = \"cytotoxic t cell\",                      variance = TRUE) #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction #>  ■■■■                               9% |  ETA:  1m #>  ■■■■■■                            18% |  ETA:  1m #>  ■■■■■■■■■                         27% |  ETA:  1m #>  ■■■■■■■■■■■■                      36% |  ETA:  1m #>  ■■■■■■■■■■■■■■■                   45% |  ETA: 46s #>  ■■■■■■■■■■■■■■■■■                 55% |  ETA: 38s #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA: 31s #>  ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA: 23s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA: 15s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  8s head(biv_kamp_var) #> # A tibble: 6 × 6 #>       r      k theo_csr kamp_csr      var   pvalue #>   <dbl>  <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1     0     0        0        0        0  NaN      #> 2    10   663.     314.     523.  173055.   0.368  #> 3    20  2667.    1257.    2108.  716375.   0.255  #> 4    30  7386.    2827.    4527. 1609555.   0.0121 #> 5    40  8745.    5027.    7727. 2907985.   0.275  #> 6    50 13191.    7854.   11713. 4691046.   0.248 biv_kamp_var %>%   ggplot(aes(x = r, y = var)) +   geom_line() +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +   labs(title = \"Bivariate KAMP Variance\", x = \"r\", y = \"Variance\") +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"kamp-lite-thinning","dir":"Articles","previous_headings":"","what":"KAMP-lite (Thinning)","title":"Introduction to KAMP","text":"KAMP-lite refers running KAMP thinned point pattern using thin = TRUE specifying p_thin 0 1. helps performance large datasets.","code":""},{"path":[]},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"expectation-2","dir":"Articles","previous_headings":"KAMP-lite (Thinning) > Univariate","what":"Expectation","title":"Introduction to KAMP","text":"","code":"ids <- unique(ovarian_df$sample_id) mark_var <- \"immune\" univ_data <- ovarian_df %>% filter(sample_id == ids[1])  univ_kamp_lite <- kamp(df = univ_data,                        rvals = seq(0, 100, by = 10),                        univariate = TRUE,                        mark_var = mark_var,                        mark1 = \"immune\",                        thin = TRUE,                        p_thin = 0.3) #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction univ_kamp_lite #> # A tibble: 11 × 5 #>        r      k theo_csr kamp_csr   kamp #>    <dbl>  <dbl>    <dbl>    <dbl>  <dbl> #>  1     0     0        0        0      0  #>  2    10  2162.     314.     524.  1638. #>  3    20  5468.    1257.    2118.  3350. #>  4    30  9179.    2827.    4499.  4680. #>  5    40 13995.    5027.    7664.  6331. #>  6    50 19611.    7854.   11600.  8011. #>  7    60 26824.   11310.   16325. 10499. #>  8    70 35349.   15394.   21893. 13456. #>  9    80 43318.   20106.   28137. 15181. #> 10    90 51432.   25447.   35125. 16307. #> 11   100 59610.   31416.   42752. 16858. univ_kamp_lite %>%   ggplot(aes(x = r)) +   geom_line(aes(y = theo_csr, color = \"theo_csr\", linetype = \"theo_csr\"), size = 1) +   geom_line(aes(y = kamp, color = \"kamp\", linetype = \"kamp\"), size = 1) +   geom_line(aes(y = k, color = \"k\", linetype = \"k\"), size = 1) +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") +   scale_color_manual(     values = c(       \"theo_csr\" = \"black\",       \"kamp\" = \"blue\",       \"k\" = \"red\"     )   ) +   scale_linetype_manual(     values = c(       \"theo_csr\" = \"solid\",       \"kamp\" = \"dotted\",       \"k\" = \"dotted\"     )   ) +   labs(     title = \"Univariate KAMP-lite Expectation\",     x = \"r\",     y = \"Value\",     color = \"Series\",     linetype = \"Series\"   ) +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"variance-2","dir":"Articles","previous_headings":"KAMP-lite (Thinning) > Univariate","what":"Variance","title":"Introduction to KAMP","text":"","code":"univ_kamp_lite_var <- kamp(df = univ_data,                            rvals = seq(0, 100, by = 10),                            univariate = TRUE,                            mark_var = mark_var,                            mark1 = \"immune\",                            thin = TRUE,                            p_thin = 0.3,                            variance = TRUE) # should display a warning message #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> Variance calculation is not supported with KAMP lite #> Variance calculation with KAMP lite is not recommended. Variance will still be computed, but interpret with caution. #> The point pattern object has more than 10000 points. Switching to border correction #>  ■■■■                               9% |  ETA: 35s #>  ■■■■■■                            18% |  ETA: 33s #>  ■■■■■■■■■                         27% |  ETA: 29s #>  ■■■■■■■■■■■■                      36% |  ETA: 26s #>  ■■■■■■■■■■■■■■■                   45% |  ETA: 22s #>  ■■■■■■■■■■■■■■■■■                 55% |  ETA: 19s #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA: 15s #>  ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA: 12s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA:  8s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  4s univ_kamp_lite_var #> # A tibble: 11 × 7 #>        r      k theo_csr kamp_csr   kamp      var     pvalue #>    <dbl>  <dbl>    <dbl>    <dbl>  <dbl>    <dbl>      <dbl> #>  1     0     0        0        0      0        0  NaN        #>  2    10  1964.     314.     530.  1434.   41463.   9.52e-13 #>  3    20  6079.    1257.    2112.  3968.  172314.   5.98e-22 #>  4    30 11184.    2827.    4538.  6647.  399411.   3.61e-26 #>  5    40 16411.    5027.    7745.  8666.  744554.   4.91e-24 #>  6    50 20947.    7854.   11735.  9212. 1239598.   6.46e-17 #>  7    60 27720.   11310.   16462. 11258. 1928490.   2.60e-16 #>  8    70 35789.   15394.   22025. 13764. 2869955.   2.24e-16 #>  9    80 43263.   20106.   28282. 14981. 4070528.   5.63e-14 #> 10    90 51724.   25447.   35275. 16449. 5615689.   1.94e-12 #> 11   100 60087.   31416.   42967. 17120. 7546680.   2.30e-10"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"bivariate-1","dir":"Articles","previous_headings":"KAMP-lite (Thinning)","what":"Bivariate","title":"Introduction to KAMP","text":"","code":"ids <- unique(ovarian_df$sample_id) biv_data <- ovarian_df %>%    filter(sample_id == ids[1]) #%>% #filter(phenotype %in% c(\"helper t cell\", \"cytotoxic t cell\", \"other\")) %>% #droplevels()  mark_var <- \"phenotype\"  head(biv_data) #>   cell_id                                           sample_id       x       y #> 1       1 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20592.9 34524.4 #> 2       2 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20859.3 34524.4 #> 3       3 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20591.4 34530.4 #> 4       4 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20744.7 34528.9 #> 5       5 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20419.8 34540.8 #> 6       6 030120 P9HuP6 TMA 1-B_Core[1,1,H]_[20633,35348].im3 20741.7 34542.3 #>       immune phenotype #> 1 background     other #> 2 background     other #> 3 background     tumor #> 4 background     tumor #> 5 background     other #> 6 background     tumor"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"expectation-3","dir":"Articles","previous_headings":"KAMP-lite (Thinning) > Bivariate","what":"Expectation","title":"Introduction to KAMP","text":"","code":"biv_kamp_lite <- kamp(df = biv_data,                       rvals = seq(0, 100, by = 10),                       univariate = FALSE,                       mark_var = mark_var,                       mark1 = \"helper t cell\",                       mark2 = \"cytotoxic t cell\",                       thin = TRUE,                       p_thin = 0.3) #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> The point pattern object has more than 10000 points. Switching to border correction head(biv_kamp_lite) #> # A tibble: 6 × 5 #>       r      k theo_csr kamp_csr  kamp #>   <dbl>  <dbl>    <dbl>    <dbl> <dbl> #> 1     0     0        0        0     0  #> 2    10   759.     314.     528.  231. #> 3    20  3830.    1257.    2115. 1715. #> 4    30 10028.    2827.    4543. 5484. #> 5    40 10028.    5027.    7720. 2308. #> 6    50 13948.    7854.   11725. 2223. biv_kamp_lite %>%   ggplot(aes(x = r)) +   geom_line(aes(y = theo_csr, color = \"theo_csr\", linetype = \"theo_csr\"), size = 1) +   geom_line(aes(y = kamp, color = \"kamp\", linetype = \"kamp\"), size = 1) +   geom_line(aes(y = k, color = \"k\", linetype = \"k\"), size = 1) +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") +   scale_color_manual(     values = c(       \"theo_csr\" = \"black\",       \"kamp\" = \"blue\",       \"k\" = \"red\"     )   ) +   scale_linetype_manual(     values = c(       \"theo_csr\" = \"solid\",       \"kamp\" = \"dotted\",       \"k\" = \"dotted\"     )   ) +   labs(     title = \"Bivariate KAMP-lite Expectation\",     x = \"r\",     y = \"Value\",     color = \"Series\",     linetype = \"Series\"   ) +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/articles/kamp_intro.html","id":"variance-3","dir":"Articles","previous_headings":"KAMP-lite (Thinning) > Bivariate","what":"Variance","title":"Introduction to KAMP","text":"","code":"biv_kamp_lite_var <- kamp(df = biv_data,                           rvals = seq(0, 100, by = 10),                           univariate = FALSE,                           mark_var = mark_var,                           mark1 = \"helper t cell\",                           mark2 = \"cytotoxic t cell\",                           variance = TRUE,                           thin = TRUE,                           p_thin = 0.3) # should display a warning message #> We expect the dataframe to be a single point process. If you have multiple point processes, subset the dataframe by ID and please run KAMP separately for each process. #> Variance calculation is not supported with KAMP lite #> Variance calculation with KAMP lite is not recommended. Variance will still be computed, but interpret with caution. #> The point pattern object has more than 10000 points. Switching to border correction #>  ■■■■                               9% |  ETA: 41s #>  ■■■■■■                            18% |  ETA: 38s #>  ■■■■■■■■■                         27% |  ETA: 33s #>  ■■■■■■■■■■■■                      36% |  ETA: 28s #>  ■■■■■■■■■■■■■■■                   45% |  ETA: 24s #>  ■■■■■■■■■■■■■■■■■                 55% |  ETA: 21s #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA: 17s #>  ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA: 12s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA:  8s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  4s head(biv_kamp_lite_var) #> # A tibble: 6 × 6 #>       r      k theo_csr kamp_csr      var  pvalue #>   <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl> #> 1     0     0        0        0        0  NaN     #> 2    10     0      314.     524.  366275.   0.807 #> 3    20  2104.    1257.    2138. 1523941.   0.511 #> 4    30  6365.    2827.    4609. 3399440.   0.170 #> 5    40  7795.    5027.    7830. 6014528.   0.506 #> 6    50 14284.    7854.   11862. 9554116.   0.217 biv_kamp_lite_var %>%   ggplot(aes(x = r, y = var)) +   geom_line() +   geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +   labs(title = \"Bivariate KAMP lite Variance\", x = \"r\", y = \"Variance\") +   theme_minimal()"},{"path":"https://dliao1.github.io/kperm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daisy Liao. Author, maintainer. Alex Soupir. Author. Julia Wrobel. Author.","code":""},{"path":"https://dliao1.github.io/kperm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao D, Soupir , Wrobel J (2025). KAMP: KAMP: Permutation-Based Ripley's K Analysis Spatial Point Patterns. R package version 0.0.0.9000, https://dliao1.github.io/kamp/.","code":"@Manual{,   title = {KAMP: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns},   author = {Daisy Liao and Alex Soupir and Julia Wrobel},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dliao1.github.io/kamp/}, }"},{"path":"https://dliao1.github.io/kperm/index.html","id":"introduction","dir":"","previous_headings":"","what":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"kperm R package efficiently estimating Ripley’s K complete spatial randomness using robust statistical approach called KAMP (K adjusted Analytical Moments Permutation distribution). KAMP avoids need computationally expensive permutations accounting spatial inhomogeneity, making suitable large-scale spatial analyses encountered spatial proteomics multiplex imaging datasets.","code":""},{"path":"https://dliao1.github.io/kperm/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"package provides functions compute univariate bivariate KAMP expectation variance (spatstat matrix-based implementation included). time, edge correction methods supported translational (trans) isotropic (iso).","code":""},{"path":[]},{"path":"https://dliao1.github.io/kperm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"","code":"# Install from GitHub devtools::install_github(\"dliao1/kperm\")"},{"path":"https://dliao1.github.io/kperm/index.html","id":"univariate","dir":"","previous_headings":"","what":"Univariate","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"","code":"library(kperm)  # Simulate a point pattern pp <- sim_pp_data(lambda_n = 500, abundance = 0.3)  # Compute KAMP expectation kamp_expec_univ <- kamp_expectation(pp, markvar = \"immune\") print(kamp_expec_univ)  # Compute KAMP variance kamp_var <- kamp_variance(pp, markvar = \"immune\") print(kamp_var)"},{"path":"https://dliao1.github.io/kperm/index.html","id":"bivariate","dir":"","previous_headings":"","what":"Bivariate","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"","code":"library(kperm)  # Simulate a point pattern pp <- sim_pp_data_biv(lambda_n = 500, abundance = 0.3)  # Compute KAMP expectation kamp_expec_biv <- kamp_expectation_biv(pp) print(kamp_expec_biv)  # Compute KAMP variance kamp_var_biv <- kamp_variance_biv(pp) print(kamp_var_biv)"},{"path":"https://dliao1.github.io/kperm/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns","text":"Link documentation vignettes: https://dliao1.github.io/KAMP/","code":""},{"path":"https://dliao1.github.io/kperm/reference/check_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks inputs for KAMP functions — check_inputs","title":"Checks inputs for KAMP functions — check_inputs","text":"Checks inputs KAMP functions","code":""},{"path":"https://dliao1.github.io/kperm/reference/check_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks inputs for KAMP functions — check_inputs","text":"","code":"check_inputs(   df,   rvals,   univariate,   correction,   mark_var,   mark1,   mark2,   variance,   thin,   p_thin,   background,   ... )"},{"path":"https://dliao1.github.io/kperm/reference/check_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks inputs for KAMP functions — check_inputs","text":"df dataframe containing point pattern data. converted ppp object. rvals Vector radius values compute KAMP expectation. univariate Logical indicating whether compute univariate KAMP expectation. Defaults TRUE. mark_var Column name df contains marks point pattern object. mark1 Value used mark points point pattern object. mark2 Value used mark points point pattern object second type (optional, used univariate FALSE). variance Logical indicating whether compute variance KAMP (default FALSE). thin Logical indicating whether thin point pattern computing KAMP (default FALSE), called KAMP-lite. p_thin Percentage determines much thin background Value used define background point pattern object. ...","code":""},{"path":"https://dliao1.github.io/kperm/reference/check_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks inputs for KAMP functions — check_inputs","text":"TRUE inputs valid, otherwise throws error descriptive message.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — KAMP-package","title":"KAMP: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — KAMP-package","text":"Provides functions calculate KAMP, robust scalable K-statistic inhomogenous spatial point pattern data.","code":""},{"path":[]},{"path":"https://dliao1.github.io/kperm/reference/kamp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"KAMP: KAMP: Permutation-Based Ripley's K Analysis for Spatial Point Patterns — KAMP-package","text":"Maintainer: Daisy Liao daisy.liao@emory.edu (ORCID) Authors: Alex Soupir alex.soupir@moffitt.org (ORCID) Julia Wrobel julia.wrobel@emory.edu (ORCID)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP — kamp","title":"KAMP — kamp","text":"function computes KAMP expectation variance given point pattern. Calculates Ripley's K using traditional Ripley's K method (based Kcross) KAMP-adjusted CSR baseline (based Kest). KAMP-adjusted CSR represents robust baseline K accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. expectation, function uses spatstat package hood, automatically uses border correction number points point pattern 3000. variance, function utlizes matrix-based implementation. See ?Kcross ?Kest details K calculation methods. See kamp_expectation_mat matrix-based implementation (Note: currently recommended due slow speed)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP — kamp","text":"","code":"kamp(   df,   rvals,   univariate = TRUE,   mark_var,   mark1,   mark2 = NULL,   variance = FALSE,   correction = \"trans\",   thin = FALSE,   p_thin = 0.5,   background = NULL,   ... )"},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP — kamp","text":"rvals vector distances compute KAMP expectation variance. univariate logical value indicating whether compute univariate KAMP (default TRUE). mark1 Variable used mark points point pattern object first type. mark2 Variable used mark points point pattern object second type (optional, used univariate FALSE). variance logical value indicating whether compute variance KAMP (default FALSE). correction Type edge correction. Defaults translational. thin logical value indicating whether thin point pattern computing KAMP (default FALSE), called KAMP-lite. p_thin Percentage determines much thin amount points point pattern object. Default 0. background Variable used define background point pattern object. ... Additional arguments passed underlying functions. ppp_obj point pattern object class ppp spatstat package.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP — kamp","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP expectation. kamp difference observed K KAMP CSR var variance = TRUE, variance K KAMP null distribution pval variance = TRUE, p-value estimates probability observing deviation expected KAMP-adjusted value large larger one observed, null hypothesis CSR). Calculated using normal approximation.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP — kamp","text":"Computes KAMP expectation variance","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KAMP — kamp","text":"","code":"# Loads required packages library(spatstat.geom) #> Loading required package: spatstat.data #> Loading required package: spatstat.univar #> spatstat.univar 3.1-4 #> spatstat.geom 3.6-0 library(spatstat.explore) #> Loading required package: spatstat.random #> spatstat.random 3.4-2 #> Loading required package: nlme #> spatstat.explore 3.5-3  # Simulates a simple marked point pattern set.seed(100) x_coords <- runif(100) y_coords <- runif(100) marks_vec <- sample(c(\"immune\", \"background\"), 100, replace = TRUE) win <- owin(c(0,1), c(0,1)) ppp_obj <- ppp(x_coords, y_coords, window = win, marks = marks_vec)  # Defines radius values for K-function estimation r_vals <- seq(0.01, 0.1, by = 0.01)  # Computes univariate KAMP expectation kamp_result <- kamp(ppp_obj = ppp_obj,                     rvals = r_vals,                     univariate = TRUE,                     mark1 = \"immune\") #> Error in kamp(ppp_obj = ppp_obj, rvals = r_vals, univariate = TRUE, mark1 = \"immune\"): argument \"df\" is missing, with no default head(kamp_result) #> Error: object 'kamp_result' not found  # Compute univariate KAMP expectation with thinning kamp_thin <- kamp(ppp_obj = ppp_obj,                   rvals = r_vals,                   univariate = TRUE,                   mark1 = \"immune\",                   thin = TRUE,                   p_thin = 0.3) #> Error in kamp(ppp_obj = ppp_obj, rvals = r_vals, univariate = TRUE, mark1 = \"immune\",     thin = TRUE, p_thin = 0.3): argument \"df\" is missing, with no default head(kamp_thin) #> Error: object 'kamp_thin' not found  # Use real data from VectraPolarisData in package data(ovarian_df) sample_id <- unique(ovarian_df$sample_id)[1] ov_df <- subset(ovarian_df, sample_id == sample_id) win <- convexhull.xy(ov_df$x, ov_df$y) ppp_real <- ppp(ov_df$x, ov_df$y, window = win, marks = ov_df$immune) kamp_real <- kamp(ppp_obj = ppp_real,                   rvals = seq(0.01, 0.1, 0.01),                   univariate = TRUE,                   mark1 = \"immune\") #> Error in kamp(ppp_obj = ppp_real, rvals = seq(0.01, 0.1, 0.01), univariate = TRUE,     mark1 = \"immune\"): argument \"df\" is missing, with no default head(kamp_real) #> Error: object 'kamp_real' not found"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP univariate expectation — kamp_expectation","title":"KAMP univariate expectation — kamp_expectation","text":"Computes KAMP (K-function Adjusted Marked Permutations) expectation given spatial point pattern. function calculates Ripley's K using traditional Ripley's K method (based Kcross) KAMP-adjusted CSR baseline (based Kest). KAMP-adjusted CSR represents robust baseline K (compared traditional CSR) accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. Notes: function uses spatstat package hood, automatically uses border correction number points point pattern 3000. See ?Kcross ?Kest details K calculation methods. See kamp_expectation_mat matrix-based implementation.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP univariate expectation — kamp_expectation","text":"","code":"kamp_expectation(   ppp_obj,   rvals = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   mark1 = \"immune\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP univariate expectation — kamp_expectation","text":"ppp_obj point pattern object spatstat.geom package. rvals Vector radii calculate KAMP expectation. Defaults c(0, 0.05, 0.075, 0.1, 0.15, 0.2). correction Type edge correction method used passed Kcross Kest. Defaults translational edge correction. mark1 Identifies subset marked points. Defaults immune.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP univariate expectation — kamp_expectation","text":"dataframe following columns: r radius K calculated. k observed K value Kcross theo_csr theoretical K CSR Kcross kamp_csr adjusted CSR representing permuted expectation. kamp difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP univariate expectation — kamp_expectation","text":"Compute KAMP Expectation","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP bivariate expectation — kamp_expectation_biv","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"Computes KAMP (K-function Adjusted Marked Permutations) expectation bivariate point patterns. function calculates Ripley's K using traditional Ripley's K method (based Kcross) KAMP-adjusted CSR baseline (based Kest). KAMP-adjusted CSR represents robust baseline K (compared traditional CSR) accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. Note: function uses spatstat package hood. See ?Kcross ?Kest details K calculation methods. See kamp_expectation_biv_mat matrix-based implementation KAMP bivariate expectation.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"","code":"kamp_expectation_biv(   ppp_obj,   rvals = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   mark1 = \"immune1\",   mark2 = \"immune2\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"ppp_obj point pattern object spatstat.geom package. correction Type edge correction. Defaults translational. rvec Vector radii calculate KAMP expectation. Defaults c(0, 0.05, 0.075, 0.1, 0.15, 0.2). markvar1 Variable used mark points point pattern object first type. Default \"immune1\". markvar2 Variable used mark points point pattern object second type. Default \"immune2\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"Computes KAMP Expectation Bivariate Point Patterns","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KAMP bivariate expectation — kamp_expectation_biv","text":"","code":"if (requireNamespace(\"spatstat.geom\", quietly = TRUE) &&     requireNamespace(\"spatstat.random\", quietly = TRUE)) {    # Simulates a window   win <- spatstat.geom::owin(c(0, 1), c(0, 1))    # Generates 200 total points   pp <- spatstat.random::rpoispp(lambda = 200, win = win)    # Assigns three marks: immune1, immune2, and background   marks <- sample(c(\"immune1\", \"immune2\", \"background\"), pp$n, replace = TRUE, prob = c(0.3, 0.3, 0.4))    # Creates marked point pattern   marked_pp <- spatstat.geom::ppp(pp$x, pp$y, window = win, marks = factor(marks))    # Computes KAMP expectation   result <- kamp_expectation_biv(marked_pp, markvar1 = \"immune1\", markvar2 = \"immune2\")   print(result) } #> Error in kamp_expectation_biv(marked_pp, markvar1 = \"immune1\", markvar2 = \"immune2\"): unused arguments (markvar1 = \"immune1\", markvar2 = \"immune2\")"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","title":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","text":"Computes KAMP (K-function Adjusted Marked Permutations) expectation bivariate point patterns using matrix-based approach. Note slower. See kamp_expectation_biv spatstat-based implementation KAMP bivariate expectation.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","text":"","code":"kamp_expectation_biv_mat(   ppp_obj,   rvals = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   mark1 = \"immune1\",   mark2 = \"immune2\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","text":"ppp_obj point pattern object spatstat.geom package. correction Type edge correction method. Defaults translational. rvec Vector radii calculate KAMP expectation. Defaults c(0, 0.05, 0.075, 0.1, 0.15, 0.2). markvar1 Variable used mark points point pattern object first type. Default \"immune1\". markvar2 Variable used mark points point pattern object second type. Default \"immune2\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp difference observed K KAMP CSR","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_expectation_biv_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP bivariate expectation (Matrix Implementation) — kamp_expectation_biv_mat","text":"Bivariate KAMP Expectation (Matrix Implementation)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP univariate variance — kamp_variance","title":"KAMP univariate variance — kamp_variance","text":"Computes KAMP (K-function Adjusted Marked Permutations) variance given spatial point pattern. Also returns KAMP expectation, z-statistic, p-value. Note: matrix-based implementation KAMP variance use spatstat package. wrapper around kamp_variance_helper function calculates KAMP variance one radius maps vector radii.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP univariate variance — kamp_variance","text":"","code":"kamp_variance(   ppp_obj,   rvals = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   mark1 = \"immune\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP univariate variance — kamp_variance","text":"ppp_obj point pattern object class \"ppp\" spatstat package. rvals vector radii calculate KAMP variance. correction Type edge correction. Defaults translational. mark1 variable used mark points point pattern object. Default \"immune\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP univariate variance — kamp_variance","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp difference observed K KAMP CSR var Variance K permutation null distribution pval P-value, calculated using formula: pnorm(-z)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP univariate variance — kamp_variance","text":"KAMP Variance","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv.html","id":null,"dir":"Reference","previous_headings":"","what":"KAMP bivariate variance — kamp_variance_biv","title":"KAMP bivariate variance — kamp_variance_biv","text":"Computes KAMP (K-function Adjusted Marked Permutations) variance bivariate point patterns. function calculates Ripley's K using traditional Ripley's K method KAMP-adjusted CSR baseline using matrix-based implementation. KAMP-adjusted CSR represents realistic baseline K (compared traditional CSR) accounts spatial clustering inhomogeneity point pattern compared traditional CSR assumption, avoiding computational burden permuting point pattern. Note: function implements slower, matrix-based implementation KAMP variance. wrapper around kamp_variance_biv_helper function calculates KAMP variance one radius maps vector radii.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KAMP bivariate variance — kamp_variance_biv","text":"","code":"kamp_variance_biv(   ppp_obj,   rvals = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),   correction = \"trans\",   mark1 = \"immune1\",   mark2 = \"immune2\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KAMP bivariate variance — kamp_variance_biv","text":"ppp_obj point pattern object spatstat.geom package. correction Type edge correction. Defaults translational. rvec vector radii calculate KAMP expectation. Defaults c(0, 0.05, 0.075, 0.1, 0.15, 0.2). markvar1 Variable used mark points point pattern object first type. Default \"immune1\". markvar2 Variable used mark points point pattern object second type. Default \"immune2\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KAMP bivariate variance — kamp_variance_biv","text":"dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. var Variance K permutation null distribution z Z statistic, calculated normalizing K using formula: (K - KAMP)/sqrt(var) pval P-value, calculated using formula: pnorm(-z)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KAMP bivariate variance — kamp_variance_biv","text":"Computes KAMP Variance Bivariate Point Patterns","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_variance_biv_helper — kamp_variance_biv_helper","title":"kamp_variance_biv_helper — kamp_variance_biv_helper","text":"Helper function calculate KAMP variance bivariate point patterns.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_variance_biv_helper — kamp_variance_biv_helper","text":"","code":"kamp_variance_biv_helper(   ppp_obj,   rval,   correction = \"trans\",   mark1 = \"immune1\",   mark2 = \"immune2\" )"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_variance_biv_helper — kamp_variance_biv_helper","text":"ppp_obj point pattern object \"ppp\" spatstat package. correction Type edge correction. Defaults translational. mark1 Variable used mark points point pattern object first type. Default \"immune1\". mark2 Variable used mark points point pattern object second type. Default \"immune2\". rvalue single radius","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_variance_biv_helper — kamp_variance_biv_helper","text":"single-row dataframe following columns: r radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. var Variance K permutation null distribution pval P-value, calculated using formula: pnorm(-z)","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_biv_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_variance_biv_helper — kamp_variance_biv_helper","text":"Helper function bivariate KAMP Variance","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"kamp_variance_helper — kamp_variance_helper","title":"kamp_variance_helper — kamp_variance_helper","text":"Helper function calculate KAMP variance point pattern object single radius.","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kamp_variance_helper — kamp_variance_helper","text":"","code":"kamp_variance_helper(ppp_obj, rvalue, correction = \"trans\", mark1 = \"immune\")"},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kamp_variance_helper — kamp_variance_helper","text":"ppp_obj point pattern object \"ppp\" spatstat package. rvalue single radius correction Type edge correction. Defaults translational. mark1 Value used mark points point pattern object. Default \"immune\".","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kamp_variance_helper — kamp_variance_helper","text":"single-row dataframe following columns: r current radius K calculated. k observed K value theo_csr theoretical K CSR kamp_csr adjusted CSR representing KAMP permuted expectation. kamp difference observed K KAMP CSR var Variance K permutation null distribution pval P-value","code":""},{"path":"https://dliao1.github.io/kperm/reference/kamp_variance_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kamp_variance_helper — kamp_variance_helper","text":"Helper function KAMP Variance","code":""},{"path":"https://dliao1.github.io/kperm/reference/ovarian_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Ovarian Cancer Example Dataframe — ovarian_df","title":"Ovarian Cancer Example Dataframe — ovarian_df","text":"processed dataframe derived VectraPolaris ovarian cancer dataset. snapshot 5 images HumanOvarianCancerVP() dataset VectraPolarisData package","code":""},{"path":"https://dliao1.github.io/kperm/reference/ovarian_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ovarian Cancer Example Dataframe — ovarian_df","text":"","code":"ovarian_df"},{"path":"https://dliao1.github.io/kperm/reference/ovarian_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ovarian Cancer Example Dataframe — ovarian_df","text":"dataframe x y coordinates marks indicating immune status. cell_id ID current cell current sample/image sample_id ID sample/image x X coordinate current cell y Y coordinate current cell immune factor indicating whether cell immune background phenotype factor indicating cell type (e.g., b cell, cytotoxic t cell, helper t cell, macrophage, tumor, )","code":""},{"path":"https://dliao1.github.io/kperm/reference/ovarian_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ovarian Cancer Example Dataframe — ovarian_df","text":"Subset HumanOvarianCancerVP() VectraPolarisData package.","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dliao1.github.io/kperm/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates spatial data — sim_pp_data","title":"Simulates spatial data — sim_pp_data","text":"Simulates spatial point pattern two cell types: background immune.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates spatial data — sim_pp_data","text":"","code":"sim_pp_data(   lambda_n,   abundance,   markvar1 = \"immune\",   markvar2 = \"background\",   distribution = \"hom\",   clust = FALSE )"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates spatial data — sim_pp_data","text":"lambda_n Number total cells image abundance Percentage intensity marker positive cells markvar1 Marker positive cell type (default \"immune\") markvar2 Marker negative cell type (default \"background\") distribution Determines whether image homogeneous (\"hom\") inhomogeneous (\"inhom\") clust Determines whether image simulated without clustering (TRUE/FALSE)","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates spatial data — sim_pp_data","text":"point pattern object class \"ppp\" spatstat package two cell types background immune.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates spatial data — sim_pp_data","text":"","code":"if (requireNamespace(\"dplyr\", quietly = TRUE) &&    requireNamespace(\"ggplot2\", quietly = TRUE) &&    requireNamespace(\"tibble\", quietly = TRUE) &&    requireNamespace(\"magrittr\", quietly = TRUE)) {   pp_obj <- sim_pp_data(lambda_n = 200, abundance = 0.3)   magrittr::`%>%`(   tibble::as_tibble(pp_obj),   ggplot2::ggplot(ggplot2::aes(x, y, color = marks))   ) +   ggplot2::geom_point() }"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates bivariate point process data — sim_pp_data_biv","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"Simulates spatial point pattern three cell types: background, immune1, immune2.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"","code":"sim_pp_data_biv(   lambda_n,   abundance,   markvar1 = \"immune1\",   markvar2 = \"immune2\",   markvar3 = \"background\",   distribution = \"hom\",   clust = FALSE )"},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"lambda_n Number total cells image abundance Percentage intensity marker positive cells markvar1 Marker positive cell type (default \"immune1\") markvar2 Marker positive cell type (default \"immune2\") markvar3 Marker negative cell type (default \"background\") distribution Determines whether image homogeneous (\"hom\") inhomogeneous (\"inhom\") clust Determines whether image simulated without clustering (TRUE/FALSE)","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"point pattern object class \"ppp\" spatstat package three cell types background, immune1, immune2.","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"Simulates bivariate point process data","code":""},{"path":"https://dliao1.github.io/kperm/reference/sim_pp_data_biv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates bivariate point process data — sim_pp_data_biv","text":"","code":"if (requireNamespace(\"dplyr\", quietly = TRUE) &&    requireNamespace(\"ggplot2\", quietly = TRUE) &&    requireNamespace(\"tibble\", quietly = TRUE) &&    requireNamespace(\"magrittr\", quietly = TRUE)) {   pp_obj <- sim_pp_data_biv(lambda_n = 200, abundance = 0.3)   magrittr::`%>%`(   tibble::as_tibble(pp_obj),   ggplot2::ggplot(ggplot2::aes(x, y, color = marks))   ) +   ggplot2::geom_point() }"}]
