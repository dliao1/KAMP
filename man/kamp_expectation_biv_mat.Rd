% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kamp_expectation_biv.R
\name{kamp_expectation_biv_mat}
\alias{kamp_expectation_biv_mat}
\title{KAMP bivariate expectation (Matrix Implementation)}
\usage{
kamp_expectation_biv_mat(
  ppp_obj,
  rvec = c(0, 0.05, 0.075, 0.1, 0.15, 0.2),
  correction = "trans",
  markvar1 = "immune1",
  markvar2 = "immune2",
  thin_pct = 0
)
}
\arguments{
\item{ppp_obj}{A point pattern object from the \code{spatstat.geom} package.}

\item{rvec}{Vector of radii at which to calculate the KAMP expectation. Defaults to c(0, 0.05, 0.075, 0.1, 0.15, 0.2).}

\item{correction}{Type of edge correction method. Defaults to translational.}

\item{markvar1}{Variable used to mark the points in the point pattern object for the first type. Default is "immune1".}

\item{markvar2}{Variable used to mark the points in the point pattern object for the second type. Default is "immune2".}

\item{thin_pct}{Percentage that determines how much to thin the amount of points in the point pattern object. Default is 0.}
}
\value{
A dataframe with the following columns:
\describe{
\item{r}{The radius at which K was calculated.}
\item{k}{The observed K value}
\item{theo_csr}{The theoretical K under CSR}
\item{kamp_csr}{The adjusted CSR representing the KAMP permuted expectation.}
\item{kamp_fundiff}{The difference between observed K and KAMP CSR}
}
}
\description{
Computes the KAMP (K-function Adjusted for Marked Permutations) expectation
for bivariate point patterns using a matrix-based approach. Note that this
is slower.

See \code{kamp_expectation_biv} for the \code{spatstat}-based implementation of the KAMP
bivariate expectation.
}
\details{
Bivariate KAMP Expectation (Matrix Implementation)
}
\examples{

if (requireNamespace("spatstat.geom", quietly = TRUE) &&
    requireNamespace("spatstat.random", quietly = TRUE)) {

  # Simulates a window
  win <- spatstat.geom::owin(c(0, 1), c(0, 1))

  # Generates 200 total points
  pp <- spatstat.random::rpoispp(lambda = 200, win = win)

  # Assigns three marks: immune1, immune2, and background
  marks <- sample(c("immune1", "immune2", "background"), pp$n, replace = TRUE, prob = c(0.3, 0.3, 0.4))

  # Creates marked point pattern
  marked_pp <- spatstat.geom::ppp(pp$x, pp$y, window = win, marks = factor(marks))

  # Computes KAMP expectation
  result <- kamp_expectation_biv_mat(marked_pp, markvar1 = "immune1", markvar2 = "immune2")
  print(result)
}
}
